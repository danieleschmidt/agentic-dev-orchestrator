name: Release

on:
  push:
    tags:
      - 'v*'

env:
  PYTHON_VERSION: "3.11"

permissions:
  contents: write
  id-token: write  # For OIDC token for PyPI

jobs:
  test:
    name: Run tests before release
    uses: ./.github/workflows/ci.yml

  build-binaries:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux-x86_64
          - os: macos-latest
            target: macos-x86_64
          - os: macos-14  # Apple Silicon
            target: macos-arm64
          - os: windows-latest
            target: windows-x86_64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -e .

    - name: Build binary
      run: |
        pyinstaller --onefile --name ado-${{ matrix.target }} ado.py

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: dist/ado-${{ matrix.target }}*

  release-pypi:
    name: Release to PyPI
    runs-on: ubuntu-latest
    needs: test
    environment: release

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  release-docker:
    name: Release Docker image
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-binaries, release-pypi, release-docker]

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          binaries/*
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref_name, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}