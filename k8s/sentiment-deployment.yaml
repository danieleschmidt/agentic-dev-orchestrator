# Kubernetes deployment for Sentiment Analysis API
apiVersion: v1
kind: Namespace
metadata:
  name: sentiment-analysis
  labels:
    app.kubernetes.io/name: sentiment-analysis
    app.kubernetes.io/version: "1.0.0"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sentiment-config
  namespace: sentiment-analysis
data:
  LOG_LEVEL: "INFO"
  SENTIMENT_MAX_WORKERS: "8"
  SENTIMENT_BATCH_SIZE: "20"
  SENTIMENT_CACHE_TTL: "3600"
  PYTHONPATH: "/app"

---
apiVersion: v1
kind: Secret
metadata:
  name: sentiment-secrets
  namespace: sentiment-analysis
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  OPENAI_API_KEY: ""
  REDIS_PASSWORD: ""

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentiment-api
  namespace: sentiment-analysis
  labels:
    app: sentiment-api
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: sentiment-api
  template:
    metadata:
      labels:
        app: sentiment-api
        component: api
    spec:
      serviceAccountName: sentiment-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: sentiment-api
        image: ado-sentiment:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        envFrom:
        - configMapRef:
            name: sentiment-config
        - secretRef:
            name: sentiment-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        volumeMounts:
        - name: cache-volume
          mountPath: /app/.ado/cache
        - name: logs-volume
          mountPath: /app/logs
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: cache-volume
        persistentVolumeClaim:
          claimName: sentiment-cache-pvc
      - name: logs-volume
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "amd64"
        effect: "NoSchedule"

---
apiVersion: v1
kind: Service
metadata:
  name: sentiment-api-service
  namespace: sentiment-analysis
  labels:
    app: sentiment-api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: sentiment-api

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sentiment-api-ingress
  namespace: sentiment-analysis
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - sentiment.yourdomain.com
    secretName: sentiment-tls
  rules:
  - host: sentiment.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sentiment-api-service
            port:
              number: 80

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sentiment-cache-pvc
  namespace: sentiment-analysis
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sentiment-api-hpa
  namespace: sentiment-analysis
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sentiment-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sentiment-api
  namespace: sentiment-analysis
  labels:
    app: sentiment-api

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: sentiment-api-pdb
  namespace: sentiment-analysis
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: sentiment-api

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: sentiment-analysis
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    name: redis
  selector:
    app: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: sentiment-analysis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --maxmemory
        - "512mb"
        - --maxmemory-policy
        - "allkeys-lru"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data-pvc
  namespace: sentiment-analysis
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi